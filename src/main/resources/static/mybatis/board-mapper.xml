<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace : package + classname -->
<mapper namespace="com.ebstudy.board.v4.repository.BoardMapper">
    <resultMap type="com.ebstudy.board.v4.dto.PostDTO" id="mapPostDTO">
        <result property="postId" column="post_id"/>
        <result property="categoryId" column="category_id"/>
        <result property="createdDate" column="created_date"/>
        <result property="modifiedDate" column="modified_date"/>
    </resultMap>

    <resultMap id="mapCategoryDTO" type="com.ebstudy.board.v4.dto.CategoryDTO">
        <result property="categoryId" column="category_id"/>
    </resultMap>

    <resultMap id="mapFileDTO" type="com.ebstudy.board.v4.dto.FileDTO">
        <result property="postId" column="post_id"/>
        <result property="fileId" column="file_id"/>
        <result property="fileName" column="file_name"/>
        <result property="fileRealName" column="file_realname"/>
    </resultMap>

    <resultMap id="mapCommentDTO" type="com.ebstudy.board.v4.dto.CommentDTO">
        <result property="postId" column="post_id"/>
        <result property="createdDate" column="created_date"/>
    </resultMap>

    <!--List<PostDTO> 형식으로 startPostNumber 번째 게시글부터 10개를 뽑아 리스트를 반환-->
    <select id="getPostList" parameterType="int" resultType="com.ebstudy.board.v4.dto.PostDTO"
            resultMap="mapPostDTO">
        SELECT *
        FROM posts A
                 LEFT JOIN categorys B ON A.category_id = B.category_id
        ORDER BY post_id DESC LIMIT #{startPostNumber}, 10;
    </select>
    <!--현재 데이터베이스에 존재하는 게시글의 총 개수를 반환-->
    <select id="getPostCount" resultType="int">
        SELECT COUNT(post_id)
        FROM posts;
    </select>
    <!--CDATA를 쓰면 sql 안에서 < >같은 문자를 써도 xml코드로 인식하지 않는다-->
    <!--요청한 postId에 해당하는 게시글을 반환-->
    <select id="getPost" parameterType="long" resultType="com.ebstudy.board.v4.dto.PostDTO"
            resultMap="mapPostDTO">
        SELECT *
        FROM posts A
                 LEFT JOIN categorys B ON A.category_id = B.category_id
        WHERE post_id = #{postId};
    </select>
    <!--카테고리 리스트를 반환-->
    <select id="getCategoryList" resultType="com.ebstudy.board.v4.dto.CategoryDTO"
            resultMap="mapCategoryDTO">
        SELECT *
        FROM categorys;
    </select>

    <!--  useGeneratedKeys의 keyProperty는 dto에 담겨 반환되므로 db PK에 해당하는 dto의 필드명을 써야 한다.   -->
    <!--PostDTO 객체에 담긴 게시글 값을 저장-->
    <insert id="savePost" parameterType="com.ebstudy.board.v4.dto.PostDTO" useGeneratedKeys="true"
            keyProperty="postId">
        INSERT INTO posts(title, category_id, author, content, passwd, created_date, modified_date)
        VALUES (#{title}, #{categoryId}, #{author}, #{content}, #{passwd}, #{createdDate}, #{modifiedDate});
    </insert>

    <!--postId값의 게시글을 수정-->
    <update id="updatePost" parameterType="PostDTO">
        UPDATE posts
        SET author        = #{author},
            passwd        = #{passwd},
            title         = #{title},
            content       = #{content},
            modified_date = #{modifiedDate}
        WHERE post_id = #{postId};
    </update>

    <!--해당 postId값의 게시글을 삭제-->
    <delete id="deletePost" parameterType="long">
        DELETE
        from posts
        WHERE post_id = #{postId};
    </delete>

    <!--postId값을 가진 열의 조회수를 증가-->
    <update id="increaseHits" parameterType="long">
        UPDATE posts
        SET hits = hits + 1
        WHERE post_id = #{postId};
    </update>

    <!--    FileDAO가 사용하는 부분-->
    <!--게시글 저장 시 첨부한 파일의 정보를 저장-->
    <insert id="saveFile" parameterType="com.ebstudy.board.v4.dto.FileDTO">
        INSERT INTO files(file_name, file_realname, post_id, extension, size)
        VALUES (#{fileName}, #{fileRealName}, #{postId}, #{extension}, ${size});
    </insert>
    <!--postId값에 해당하는 파일의 목록을 반환-->
    <select id="getFileList" parameterType="long" resultType="com.ebstudy.board.v4.dto.FileDTO"
            resultMap="mapFileDTO">
        SELECT *
        FROM files
        WHERE post_id = #{postId};
    </select>
    <!--해당 postId을 가진 파일이 하나라도 존재하는지 여부를 반환-->
    <select id="checkFileExistence" parameterType="long" resultType="boolean">
        SELECT EXISTS
                   (SELECT 1
                    FROM files
                    WHERE post_id = #{postId})
    </select>

    <!--    CommentDAO가 사용하는 부분-->
    <!--postId값에 해당하는 게시글의 목록을 반환-->
    <select id="getCommentList" parameterType="long" resultType="com.ebstudy.board.v4.dto.CommentDTO"
            resultMap="mapCommentDTO">
        SELECT *
        FROM comments
        WHERE post_id = #{postId}
        ORDER BY created_date DESC;
    </select>
    <!--댓글 대상의 postId를 가진 게시글을 저장-->
    <insert id="saveComment" parameterType="com.ebstudy.board.v4.dto.CommentDTO">
        INSERT INTO comments(comment, created_date, post_id)
        VALUES (#{comment}, #{createdDate}, #{postId});
    </insert>
</mapper>

